version: '3.5'

networks:
  servicebus:
  mongo:

services:

  # redis:
  #   image: redis
  #   networks:
  #     - servicebus
  #   ports:
  #     - 6379:6379

  mongo:
    image: mongo
    networks:
      - mongo
    ports:
      - 27017:27017

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    hostname: zookeeper
    container_name: zookeeper
    ports:
      - "2181:2181"
    networks:
      - servicebus
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka1:
    image: confluentinc/cp-kafka:5.5.0
    hostname: kafka1
    container_name: kafka1
    labels:
      - "custom.project=kafkajs"
      - "custom.service=kafka1"
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    networks:
      - servicebus
    environment:
      KAFKA_BROKER_ID: 0
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka1:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
      KAFKA_DELETE_TOPIC_ENABLE: 'true'
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
  
  kafka2:
    image: confluentinc/cp-kafka:5.5.0
    hostname: kafka2
    container_name: kafka2
    labels:
      - "custom.project=kafkajs"
      - "custom.service=kafka2"
    depends_on:
      - zookeeper
    ports:
      - "9095:9095"
    networks:
      - servicebus
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka2:29095,PLAINTEXT_HOST://localhost:9095
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
      KAFKA_DELETE_TOPIC_ENABLE: 'true'
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

  kafka3:
    image: confluentinc/cp-kafka:5.5.0
    hostname: kafka3
    container_name: kafka3
    labels:
      - "custom.project=kafkajs"
      - "custom.service=kafka3"
    depends_on:
      - zookeeper
    ports:
      - "9098:9098"
    networks:
      - servicebus
    environment:
      KAFKA_BROKER_ID: 2
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka3:29098,PLAINTEXT_HOST://localhost:9098
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
      KAFKA_DELETE_TOPIC_ENABLE: 'true'
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

# Services

  person-model:
    build:
      context: ./person-model
      dockerfile: Dockerfile
    environment:
      - MONGODB_HOST=mongo
      - KAFKA_HOST=kafka1
      - KAFKA_PORT=29092
      - KAFKA_BROKERS=kafka1:29092,kafka2:29095,kafka3:29098
    networks:
      - mongo
      - servicebus
  
  keycloak-gateway:
    build:
      context: ./keycloak-gateway
      dockerfile: Dockerfile
    environment:
      - KAFKA_HOST=kafka1
      - KAFKA_PORT=29092
      - KAFKA_BROKERS=kafka1:29092,kafka2:29095,kafka3:29098
    networks:
      - mongo
      - servicebus